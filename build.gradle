plugins {
    id 'application'
    id 'groovy'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.runtime' version '1.12.5'
}

repositories {
    mavenCentral()
}

javafx {
    version = '21'
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.graphics', 'javafx.fxml' ]
}

application {
    mainClass = 'org.tools4j.tabular.javafx.Launcher'
    applicationName = 'tabular'
}

tasks.named('test') {
    useJUnitPlatform() 
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    targetPlatform("mac") {
        jdkHome = "/Users/ben/Library/Java/JavaVirtualMachines/corretto-17.0.10/Contents/Home"
    }
//    targetPlatform("mac") {
//        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/semeru17-binaries/releases/download/jdk-17.0.9%2B9_openj9-0.41.0/ibm-semeru-open-jdk_aarch64_mac_17.0.9_9_openj9-0.41.0.tar.gz") {
//            downloadDir = "$buildDir/mac-jdk"
//            archiveName = "my-mac-jdk"
//            archiveExtension = "tar.gz"
//            pathToHome = "jdk-17.0.9+9/Contents/Home"
//            overwrite = true
//        }    
//    }
//    
//    targetPlatform("win") {
//        jdkHome = jdkDownload("https://github.com/AdoptOpenJDK/semeru17-binaries/releases/download/jdk-17.0.9%2B9_openj9-0.41.0/ibm-semeru-open-jdk_x64_windows_17.0.9_9_openj9-0.41.0.zip") {
//            downloadDir = "$buildDir/win-jdk"
//            archiveName = "my-win-jdk"
//            archiveExtension = "zip"
//            pathToHome = "jdk-17.0.9+9"
//            overwrite = false
//        }    
//    }
    
    launcher {
        noConsole = false
    }
    
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "resources/icon.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'tools4j']
        skipInstaller = true
        outputDir = "packaging"

        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            imageName = "tabular-win"
            targetPlatformName = "win"
        }
        else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'tabular','--linux-shortcut']
            imageName = "tabular-linux"
            targetPlatformName = "lin"
        }
        else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'tabular']
            imageName = "tabular-mac"
            targetPlatformName = "mac"
        }
    }
}

group 'org.tools4j'
version '5.0'

dependencies {
    implementation 'com.opencsv:opencsv:5.7.1'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    implementation 'com.airhacks:afterburner.fx:1.6.0'
    implementation 'com.github.tulskiy:jkeymaster:1.3'
    implementation 'javax.inject:javax.inject:1'
    implementation('org.codehaus.groovy:groovy-all:2.5.21'){
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.testng', module: 'testng'
    }
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.lucene:lucene-core:8.3.0'
    implementation 'org.apache.lucene:lucene-queryparser:8.3.0'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'org.freemarker:freemarker:2.3.32'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'net.java.dev.jna:jna:5.7.0'
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-2.5'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.tools4j:groovy-tables:1.6'

    testImplementation 'cglib:cglib-nodep:3.1'          // allows mocking of classes (in addition to interfaces)
    testImplementation 'org.objenesis:objenesis:2.1'    // allows mocking of classes without default constructor (together with CGLIB)
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

//JAR START

jar {
    archiveFileName.set('tabular.jar')
    manifest {
        attributes 'Main-Class': 'org.tools4j.tabular.javafx.Main'
    }
}

task createMacOsZip(type: Zip) {
    dependsOn jpackageImage
    from 'build/packaging/'
    include 'tabular-mac.app/**/*'
    archiveFileName = "tabular-mac-${version}.zip"
    destinationDirectory = layout.projectDirectory.dir('dist/')
}

task createTabularExampleZip(type: Zip) {
    doFirst {
        println "=================================="
        println "${projectDir}/example"
    }
    from "${projectDir}/example"
    include '**/*'
    archiveFileName = "tabular-example-${version}.zip"
    destinationDirectory = file('dist')
}

task copyTabularZipToDistDirectory(type: Copy) {
    from 'build/dist/zip/'
    into 'dist/'
}

task cleanStagingArea(type: Delete) {
    delete 'build/dist'
}
